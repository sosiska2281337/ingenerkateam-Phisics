<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="openFileDialog1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAAAAAAAEAIACfDgAAFgAAAIlQTkcNChoKAAAADUlIRFIAAAEAAAABAAgGAAAAXHKoZgAADmZJ
        REFUeNrt3W1sVfUdwPEaSExMcCGlyDPt7RPZC6gIAqWl0AceRBSHPGmQjcmKcz6BKeVhrB2MRDYdCCLr
        yoAtSzY2GZgYIvBic4suG/BCqUsYMl/IOoV3vOAFIb/9fvf+q9VA23OK555z/98m3/im9H/uOb/zubf1
        nnPz8mL4lbq3xrpDG6xVa63a21qHdkW7oQlRjLrhZrPDzWqrm93Bbpbz+OrbiW8N0hZrx7XPtOsMGCWs
        6252j7tZHtQ133z1/Kw/VXtDu8oQUY501c30VF4N3PrkH+ikPM/AUI523s34QBD48sk/QGvULjMklONd
        drM+wHsEuv3Ov1DrZDjIkzrdzPv9NwG3AyrcX04ZDPKpDjf7Xp/8d2rtDAN5Wrs7B7x96d/g/t8pw0A+
        dsWdA379KtDt2f8QQ0Ced8i7VwEOgJR2gQEgz7vgzgXvXv4v166F2mkVM4jiVzgArrlzwY9fA7oBsD3M
        DiuaXCeF0+ZJYSVRjNKZtNkMicB23wCwd0K1BX3WH1uzUIat2SIFzTulYMMuovikM2mzaTMa4tVAmzfv
        DnQA3KUdCbST7pslw1c1Sf62/ZK/tZ0ofuls2ozarAYE4Ig7J7wB4G7tRKCX/vfXyz3PbM3s6B//kih+
        6WzajNqsBgTghDsnvAHgG9rJYAA0AAAlBICGoACcdOcEAAAAAQAAAAABAAAAAAEAAAAAAQAAAAABAAAw
        aAQAAEAEAADQj4NF9HkA4AEA9m9b22TI5j1SsPFV3r9OmXQWbCZsNvo7XwAQYwCGrtshIxc3yti6RVI4
        fT5XsFEmnQWbCZsNmxEAyDUAWn4hw1etl8LqBVyzTj1mM2KzYjMDALkAgH7/sNUbpWhyfX9u2kC+pDNi
        s2IzE2bWACBOAOj3FjS9HPYabfIYAZsZm52g8wYAMQNgxIrnGWgKlc0OACQZgJZ9MnrBSp79KdSrAJsd
        myEASCgAQ364V8bMWQYAFAoAmx2bIQBILACvyZiGJQBA4QDQ2bEZAoAkAzAbACgkALMBAAAIAAAAAAgA
        AMATAIoqaqSQcio7pgAAAL1WPLFGJtXUS2V9A+VQdkzt2AIAAPT4zD++slbe+vWT8uk/XpDOv1MuZMfS
        jqkd2z6/EgAAPwGomF4r7x19SuRis8iF9ZQL6bG0Y2rHFgAAoEcAJuiQvPsnBeAjBeDf6ykX0mNpx3QC
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAABAAAAAAEAAAAA
        AQAAAAABAAAAAAEAAAAAAQAAAAABAAAAAAEAAAAAAQAAAAABAAAAAAEAAAAAAQAAAAABAAAAAAEAAAAA
        AQAAAAABAAAAAAEAAAAAAQAAAAABAAAAAAEAAAAAAQAAAAABAAAAAAEAAAAAAQAA9B+Aiqpaee9NBeDj
        DSIXmykX0mNpx9SOLQAAwK3X0L45ZZZsaV4iB3atlF/tpFzIjqUdUzu2RfcCAAAQAQAAEAEAABABAAAQ
        AQAAEAEAABAAAEDSAdjyuoyZ9xgAUDgAdHZshgAgoQDkt7bJqG+tBgAKBYDNjs0QACQVAP3eYY2bpWhS
        HQNNgbKZsdkJOm8AECcA0r8G7JXRD32bVwEU6NnfZsZmJ8isAUAMAbDvH/riT2Vs3aLPDy5DTrc68e2/
        Nis2M2FmDQDiBoCrYP0r6d/piqbMdge7muiLbMZ0NmxGbFbCzBgAxBgA+3dDfrRP7nnuJzLiibUycun3
        ZeSSNUTpWbCZsNmwGenPjAFAXAHodpDyt+7v/8+h3Ol2zQQAJAAAoq8REgAAAAIAAAAAAgAAAAACAAAA
        AAIAAAAAAgAAAAACAAAAAAIAAAAAAgAAAAACAACI5q3AXW/9JNr/xduAeStwbl8MZHd3KWh6JX2jh+Er
        18mIFS8QpWfBZsJmI30HIC4Gyj0AhmzaLSMef04Kq+ZLalIt177Tl9OZsNmwGbFZAYAcuiFIQfNOGf3A
        45KaOJMbglDPNwTRGbFZsZnhhiC5AEDLPhm16Hv6Mzjxqa/NSM+MzQ4AJBkAOyBPt4Q5IOT7TUFt3nR2
        uClool8BtMmoRxt52U/hbguus2MzBAAJBcA+1CH9uz8AUJg7A+vs8MEgSQYg/dFgSwGAQn402FI+Giz5
        APDZgMRnAwIAQ00AAABEAAAARAAAALdoQrWkxldF34TqcO9ey8a2WmFgTcq+BQBPAZhcLyWNTVK6aYeU
        bnwpunS9ku+uDXadgj6u4rlLpHT9dv0ZUW7vjvSatnagfauPzR5jVvatHlM7tgAAAD0/m06fJ+W/PyHj
        zv1Xxn3wSXR1dErZgaOSmjq779urz2olT66Tcacv6s+4FOH2XkqvaWv3+ZnVHpM+NnuM9lgj3bd6LO2Y
        2rENMgsA4DsA738SXbpeaAD++VHmpIxqW20tXTM0AFnYtwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQXwBOultXX4ouuy34wX7cFjx9
        G/OIttXWCntb8INHs7Jv7ZgCAAD0PqSVc6Vs/xEZ97cPpfydc5Fl65Xt+a2kptjwBABg5bNSfuqslP81
        um1Nr6Vr2tp9/8SdGenHZo8xK/tWj6kdWwAAgJ6bOFOKax+R4nlLpXhuhNl6sx5Orx9oeKbOkeI5S6Ld
        VkvXtLUDbavtW32MWdm3ekwD7VsA8BSArlcC2SrkB1myrbd5ewHAYwCIAAAACAAAAAAIAAAAAAgAAAAA
        CAAAAAAIAAAAAAgAAAAACAAAAAAIAACAdwLyTkDeCQgACb4WIFU9P/Oe9YhLVT0Q/FqA++uleOZD0W+v
        rmlrB70WwB5jVvatHlOuBQCA3p+dps2Vstd/J+Wnzkj5ydPRdeqslP38gLsasI/7xa4GXPEDKX/r3Wi3
        1dI1be2+Xw1Yk7kaUB9j+urFSPftmfQxtWPL1YAA0Pv9AA5n4X4AH/5Pyg4eC3c/gDP/if5+ALpmuPsB
        HEs/1sjvB3CY+wEAAHcE4o5AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABA3AP5wSsb969PMrcGjStcrO/RmcABWvyjjzn6cudV2VNtq
        a+matjYAAEDuAOA+aafk2S1Sum2PlG7dHV3bXpOSpzZIalJtoE+vKZ7/mJS27NSfEeX27kmvaWsHwhUA
        ACARnw1oz2rjq6IvyKfsdD+xsrG9tmaQ/QoAAJAYAOhr+bRdAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA3gp80xMrG9tq8VZgAMjJi4Ge3pS5wCbKWndJ
        SWNT8IuBHlgmpZt/Fv326pq2NhcDAUDuXQ58+FTmktdzndGVvhz4WPjLgTsi3FZbi8uBAYAbgnBDEAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAgP4CcDJz62sb9KjS9coOhgTg9MXMSRXVttpaumYoAPQxZmPf2jEFAADofUgr50pZ+x+l/J1z
        Uv7n96NL1yvb/RtJTbHhCQDAE89I+cnTUv6XD6LbVltL17S1+/5pRjPSj80eY1b2rR5TO7YAAAA9N3Gm
        pGY8KMV1j0Reqnp+Zv0gw6MnVXHtwui3V9fMYFUTbN/qY8zKvtVjGmjfAoCnAHS9EshWYT94k229vdsL
        AB4DQAQAAEAAAAAAQAAAAIkFoAEAKCQADQCQcAD2ypg5ywCAwgGgs2MzBAAJBSC/ZZ+MXrASACgUADY7
        NkMAkFQA9HtHrHieYaZQ2ewEnTcAiBkABU0vy9iah3kVQIGe/W1mbHYAIMkAuIMybPVGKZpcDwLUp5Pf
        ZsVmJsysAUDcAHB/Cxj+nSYprHowu+9Eo9hnM2KzEuh3fwCIOQCuoWtfklGPNsrYukVSOH2+FFbOI0rP
        gs2EzYbNSNj5AoCYA5D+t61tMmTzHinY+KoUbNhFlJ4Fmwmbjf7OFwDEGYCvYkDU1W2aKQBICgBEtzsA
        AAACAAAAAAIAAAAAAgAAAAACAAAAAAIAAAAAAgAAAAACAH8BuFs7EQyAegCghABQHxSAE+6c8AaAu7Qj
        gXbSfbNk+Komyd+2n3etUTzT2bQZtVkNCMARd054A8BArS34NdoLZdiaLVLQvJP3r1O80pm02bQZDXHZ
        eZs7J7wBwNoe5nrtosl1UjiNK9goZulM2myGvA/B9q7zwicAlmvXEvfpMkS385OSMufAcm8A6IZASrvA
        XWjI8y64cyHPmy8HwJ3aIQaAPO+QOxe8A8Bq0K4wBORpV9w5kOcVAF95FdDOIJCntXv37H8TBCq0DoaB
        PKvDzX6et1/dfhVYqHUyFORJnW7m87wGoBsCA7RG7TLDQTneZTfrA7w/+W/y7sDF2nmGhHK0827GB3Ly
        3xyBO7Sp2hvaVQaGcqSrbqanuhnnhO/lbwKDnJTHtc+06wwRJazrbnaPu1kexO/8wV8NDNaqtVbtbfeX
        U/t/pzcYMIpZN9xsdrhZbXWzOzjOz/r/ByHvuuALwO+OAAAAAElFTkSuQmCC
</value>
  </data>
</root>